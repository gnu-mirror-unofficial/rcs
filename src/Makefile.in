# Make RCS.

# Copyright (C) 2010 Thien-Thi Nguyen
# Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995 Paul Eggert
# Copyright (C) 1982, 1988, 1989 Walter Tichy
#
# This file is part of GNU RCS.
#
# GNU RCS is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# GNU RCS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# default target
default :: all

# See the file INSTALL.RCS for more information on the configuration section.
# ----- start of configuration section -----

#(Unix

srcdir = @srcdir@
bauxdir = $(srcdir)/../build-aux
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

CC = @CC@
CPPFLAGS = @CPPFLAGS@
CFLAGS = @CFLAGS@
DEFS = @DEFS@
DIFF = @DIFF@
DIFF3 = @DIFF3@
DIFF3_BIN = @DIFF3_BIN@
DIFFFLAGS = @DIFFFLAGS@
DIFF_L = @DIFF_L@
DIFF_FAILURE = @DIFF_FAILURE@
DIFF_SUCCESS = @DIFF_SUCCESS@
DIFF_TROUBLE = @DIFF_TROUBLE@
ED = @ED@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
SENDMAIL = @SENDMAIL@


# The following definitions can be tailored by hand;
# this shouldn't be needed for ordinary installations.

 bindir = $(exec_prefix)/bin

 ALL_CFLAGS = $(CPPFLAGS) $(DEFS) -I. -I$(srcdir) $(CFLAGS)

 COMPAT2 = 0
#COMPAT2 = 1

 LIBOBJS =

 LINK = $(CC) $(LDFLAGS) $(CFLAGS)

 LINT = lint -abchx# traditional and BSD lint
#LINT = lint# System V lint

#RCSPREFIX should end in `/' if it is not empty.
 RCSPREFIX = $(bindir)/

 REMOVE = rm -f

 o = .o
#o = .s# Minix/PC with ACK cc

 x =

#)
# On non-Unix hosts you must manually create and edit conf.h from conf.heg.

# ----- end of configuration section -----
# You shouldn't have to change anything past this point.


# Avoid brain damage in some versions of 'make'.
SHELL = /bin/sh

PROGRAMS = ci$x co$x ident$x merge$x \
	rcs$x rcsclean$x rcsdiff$x rcsmerge$x rlog$x

all :: bother.h $(PROGRAMS)

.SUFFIXES :
.SUFFIXES : .c $o
.c$o :
	$(CC) -o $@ -c $(ALL_CFLAGS) $<

installdirs :: $(bauxdir)/mkinstalldirs
	$(bauxdir)/mkinstalldirs $(bindir)

install :: all installdirs
	for p in $(PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$p $(bindir)/$$p; \
	done

uninstall ::
	for p in $(PROGRAMS); do \
	  $(REMOVE) $(bindir)/$$p; \
	done

# Install RCS and (if applicable) GNU diff before running these tests.
# To test RCS before installing it, see the file INSTALL.RCS.
RCSTEST = \
	ALL_CFLAGS='$(ALL_CFLAGS)' CC='$(CC)' DIFF='$(DIFF)' \
	LDFLAGS='$(LDFLAGS)' LIBS='$(LIBS)' \
	PATH=$(bindir):$$PATH \
	sh $(srcdir)/rcstest
installcheck ::
	$(RCSTEST)
installdebug ::
	$(RCSTEST) -v

clean ::
	$(REMOVE) a.* RCS/a.*
	$(REMOVE) *$o
	$(REMOVE) $(PROGRAMS)
	$(REMOVE) core core.* *.core

mostlyclean :: clean

distclean :: mostlyclean
	$(REMOVE) bother.h Makefile

maintainer-clean :: distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."
	$(REMOVE) TAGS

merger$o : bother.h
rcs$o : bother.h
rcsdiff$o : bother.h
rcssyn$o : bother.h
rcsutil$o : bother.h

absp = ../build-aux/abs-p

bother.h: FORCE
	@( echo '/* brooked other (shared mother) */' ; \
	   echo '#define CO "$(RCSPREFIX)co"' ; \
	   echo '#define MERGE "$(RCSPREFIX)merge"' ; \
	   echo '#define DIFF "$(DIFF)"' ; \
	   echo '#define DIFF_L $(DIFF_L)' ; \
	   echo '#define DIFF3 "$(DIFF3)"' ; \
	   echo '#define DIFF3_BIN $(DIFF3_BIN)' ; \
	   echo '#define DIFFFLAGS "$(DIFFFLAGS)"' ; \
	   echo '#define DIFF_SUCCESS $(DIFF_SUCCESS)' ; \
	   echo '#define DIFF_FAILURE $(DIFF_FAILURE)' ; \
	   echo '#define DIFF_TROUBLE $(DIFF_TROUBLE)' ; \
	   echo '#define ED "$(ED)"' ; \
	   if [ 1 = $(COMPAT2) ] ; \
	     then echo '#define COMPAT2 $(COMPAT2)' ; \
	     else echo '#undef COMPAT2' ; \
	   fi ; \
	   if [ "$(SENDMAIL)" ] ; \
	     then echo '#define SENDMAIL $(SENDMAIL)' ; \
	     else echo '#undef SENDMAIL' ; \
	   fi ; \
	   $(absp) ALL '$(DIFF)' '$(DIFF3)' '$(ED)' \
	               '$(RCSPREFIX)' '$(SENDMAIL)' ; \
	   $(absp) DIFF '$(DIFF)' ) > $@T
	@if [ -f $@ ] && cmp -s $@T $@ ; \
	  then rm -f $@T ; \
	  else mv $@T $@ ; echo Created $@ ; \
	fi

ci = ci$o rcslex$o rcssyn$o rcsgen$o rcsedit$o rcskeys$o rcsmap$o \
	rcsrev$o rcsutil$o rcsfnms$o maketime$o partime$o rcstime$o rcskeep$o \
	rcsfcmp$o $(LIBOBJS)
ci$x : $(ci)
	$(LINK) -o $@ $(ci) $(LIBS)

co = co$o rcslex$o rcssyn$o rcsgen$o rcsedit$o rcskeys$o rcsmap$o \
	rcsrev$o rcsutil$o rcsfnms$o maketime$o partime$o rcstime$o rcskeep$o \
	$(LIBOBJS)
co$x : $(co)
	$(LINK) -o $@ $(co) $(LIBS)

ident = ident$o rcsmap$o $(LIBOBJS)
ident$x : $(ident)
	$(LINK) -o $@ $(ident) $(LIBS)

merge = merge$o merger$o rcsfnms$o rcslex$o \
	rcsmap$o rcsrev$o rcssyn$o rcsutil$o \
	rcskeep$o rcskeys$o maketime$o partime$o rcstime$o \
	$(LIBOBJS)
merge$x : $(merge)
	$(LINK) -o $@ $(merge) $(LIBS)

rlog = rlog$o rcslex$o rcsmap$o rcssyn$o rcsrev$o rcsutil$o \
	maketime$o partime$o rcstime$o rcsfnms$o rcskeep$o rcskeys$o \
	$(LIBOBJS)
rlog$x : $(rlog)
	$(LINK) -o $@ $(rlog) $(LIBS)

rcs = rcs$o rcslex$o rcssyn$o rcsrev$o rcsutil$o rcsgen$o \
	rcsedit$o rcskeys$o rcsmap$o rcsfnms$o rcskeep$o \
	maketime$o partime$o rcstime$o $(LIBOBJS)
rcs$x : $(rcs)
	$(LINK) -o $@ $(rcs) $(LIBS)

rcsclean = rcsclean$o rcsedit$o rcsfcmp$o rcsfnms$o rcsgen$o rcskeys$o \
	rcslex$o rcsmap$o rcsrev$o rcssyn$o rcsutil$o rcskeep$o \
	maketime$o partime$o rcstime$o $(LIBOBJS)
rcsclean$x : $(rcsclean)
	$(LINK) -o $@ $(rcsclean) $(LIBS)

rcsdiff = rcsdiff$o rcsutil$o rcsfnms$o rcsmap$o rcsrev$o rcssyn$o \
	rcslex$o maketime$o partime$o rcstime$o rcskeep$o rcskeys$o \
	$(LIBOBJS)
rcsdiff$x : $(rcsdiff)
	$(LINK) -o $@ $(rcsdiff) $(LIBS)

rcsmerge = rcsmerge$o merger$o rcsutil$o rcsfnms$o rcsmap$o rcsrev$o \
	rcssyn$o rcslex$o rcskeep$o rcskeys$o \
	maketime$o partime$o rcstime$o $(LIBOBJS)
rcsmerge$x : $(rcsmerge)
	$(LINK) -o $@ $(rcsmerge) $(LIBS)

SOURCE=	ci.c co.c ident.c maketime.c merge.c merger.c partime.c rcs.c \
	rcsclean.c rcsdiff.c rcsedit.c rcsfcmp.c rcsfnms.c rcsgen.c \
	rcskeep.c rcskeys.c rcslex.c rcsmap.c rcsmerge.c rcsrev.c rcssyn.c \
	rcstime.c rcsutil.c rlog.c
OBJECT=	ci$o co$o ident$o maketime$o merge$o merger$o partime$o rcs$o \
	rcsclean$o rcsdiff$o rcsedit$o rcsfcmp$o rcsfnms$o rcsgen$o \
	rcskeep$o rcskeys$o rcslex$o rcsmap$o rcsmerge$o rcsrev$o rcssyn$o \
	rcstime$o rcsutil$o rlog$o

TAGS : $(SOURCE)
	etags $(SOURCE)

dvi info ::

$(OBJECT) : rcsbase.h
maketime$o partime$o rcstime$o : partime.h
maketime$o rcstime$o : maketime.h

FORCE:
